{
    "files": [
        "certora/harnesses/RegistryCoordinatorHarness.sol",
        "lib/openzeppelin-contracts/contracts/mocks/ERC1271WalletMock.sol",
        "test/mocks/ServiceManagerMock.sol",
        "src/StakeRegistry.sol",
        "src/BLSApkRegistry.sol",
        "src/IndexRegistry.sol",
        "lib/eigenlayer-contracts/src/contracts/core/Slasher.sol",
        "lib/eigenlayer-contracts/src/contracts/core/AVSDirectory.sol",
        "lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol"
    ],
    "verify": "RegistryCoordinatorHarness:certora/specs/RegistryCoordinator.spec",
    "loop_iter": "2",
    "parametric_contracts": ["RegistryCoordinatorHarness"],
    "packages": [
        "@openzeppelin=lib/openzeppelin-contracts",
        "@openzeppelin-upgrades=lib/openzeppelin-contracts-upgradeable",
        "eigenlayer-contracts=lib/eigenlayer-contracts"
    ],
    "link": [
        "RegistryCoordinatorHarness:serviceManager=ServiceManagerMock",
        "AVSDirectory:delegation=DelegationManager",
        "StakeRegistry:delegation=DelegationManager",
        "ServiceManagerMock:_avsDirectory=AVSDirectory",
        "RegistryCoordinatorHarness:blsApkRegistry=BLSApkRegistry",
        "RegistryCoordinatorHarness:indexRegistry=IndexRegistry",
        "RegistryCoordinatorHarness:stakeRegistry=StakeRegistry"
    ],
    "prover_args": [
        "-optimisticFallback true",
        "-recursionEntryLimit 2",
        // "-splitParallel true",
        "-mediumTimeout 30",
        "-depth 5"
    ],
    "optimistic_loop": true,
    "optimistic_hashing": true,
    "rule_sanity": "basic"
}
